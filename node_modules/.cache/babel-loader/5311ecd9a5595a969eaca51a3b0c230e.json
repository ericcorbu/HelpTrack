{"ast":null,"code":"var _jsxFileName = \"/home/eric/Documents/Coding/HelpTrack-frontend/HelpTrack/src/components/HelpForm/HelpForm.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass HelpForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.name = React.createRef();\n    this.grading = React.createRef();\n    this.question = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var formData = {\n      name: this.name.current.value,\n      needsGrading: this.grading.current.checked,\n      hasQuestion: this.question.current.checked\n    };\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', '/SubmitHelpRequest');\n    xhr.send(JSON.stringify(formData));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      id: \"helpForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"zoomName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"Zoom Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      ref: this.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"helpType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Type of Help\"), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      name: \"helpType\",\n      value: \"Grading\",\n      ref: this.grading,\n      label: \"Grading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      name: \"helpType\",\n      value: \"Question\",\n      ref: this.question,\n      label: \"Question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Ask For Help\"));\n  }\n\n}\n\nexport default HelpForm;","map":{"version":3,"sources":["/home/eric/Documents/Coding/HelpTrack-frontend/HelpTrack/src/components/HelpForm/HelpForm.js"],"names":["React","Form","Button","HelpForm","Component","constructor","props","handleSubmit","bind","name","createRef","grading","question","event","preventDefault","formData","current","value","needsGrading","checked","hasQuestion","xhr","XMLHttpRequest","open","send","JSON","stringify","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AACA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,IAAL,GAAYT,KAAK,CAACU,SAAN,EAAZ;AACA,SAAKC,OAAL,GAAeX,KAAK,CAACU,SAAN,EAAf;AACA,SAAKE,QAAL,GAAgBZ,KAAK,CAACU,SAAN,EAAhB;AAEH;;AAEDH,EAAAA,YAAY,CAACM,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,QAAQ,GAAG;AACXN,MAAAA,IAAI,EAAE,KAAKA,IAAL,CAAUO,OAAV,CAAkBC,KADb;AAEXC,MAAAA,YAAY,EAAE,KAAKP,OAAL,CAAaK,OAAb,CAAqBG,OAFxB;AAGXC,MAAAA,WAAW,EAAE,KAAKR,QAAL,CAAcI,OAAd,CAAsBG;AAHxB,KAAf;AAMA,QAAIE,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiB,oBAAjB;AACAF,IAAAA,GAAG,CAACG,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeX,QAAf,CAAT;AAEH;;AAEDY,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,QAAQ,EAAE,KAAKpB,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,GAAG,EAAE,KAAKE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,KAAK,EAAC,SAA/C;AAAyD,MAAA,GAAG,EAAE,KAAKE,OAAnE;AAA4E,MAAA,KAAK,EAAC,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,KAAK,EAAC,UAA/C;AAA0D,MAAA,GAAG,EAAE,KAAKC,QAApE;AAA8E,MAAA,KAAK,EAAC,UAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CALJ,eAUI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,CADJ;AAcH;;AAvCkC;;AAyCvC,eAAeT,QAAf","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nclass HelpForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.name = React.createRef();\r\n        this.grading = React.createRef();\r\n        this.question = React.createRef();\r\n\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        var formData = {\r\n            name: this.name.current.value,\r\n            needsGrading: this.grading.current.checked,\r\n            hasQuestion: this.question.current.checked\r\n        }\r\n        \r\n        var xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/SubmitHelpRequest');\r\n        xhr.send(JSON.stringify(formData));\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form id=\"helpForm\" onSubmit={this.handleSubmit}>\r\n                <Form.Group controlId=\"zoomName\">\r\n                    <Form.Label>Zoom Name</Form.Label>\r\n                    <Form.Control type=\"text\" ref={this.name} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"helpType\">\r\n                    <Form.Label>Type of Help</Form.Label>\r\n                    <Form.Check type=\"radio\" name=\"helpType\" value=\"Grading\" ref={this.grading} label=\"Grading\"/>\r\n                    <Form.Check type=\"radio\" name=\"helpType\" value=\"Question\" ref={this.question} label=\"Question\"/>\r\n                </Form.Group>\r\n                <Button type=\"submit\">Ask For Help</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nexport default HelpForm;"]},"metadata":{},"sourceType":"module"}